// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	url_shortener "url-shortener"

	gomock "github.com/golang/mock/gomock"
)

// MockUrl_api is a mock of Url_api interface.
type MockUrl_api struct {
	ctrl     *gomock.Controller
	recorder *MockUrl_apiMockRecorder
}

// MockUrl_apiMockRecorder is the mock recorder for MockUrl_api.
type MockUrl_apiMockRecorder struct {
	mock *MockUrl_api
}

// NewMockUrl_api creates a new mock instance.
func NewMockUrl_api(ctrl *gomock.Controller) *MockUrl_api {
	mock := &MockUrl_api{ctrl: ctrl}
	mock.recorder = &MockUrl_apiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrl_api) EXPECT() *MockUrl_apiMockRecorder {
	return m.recorder
}

// Create_Short_URL mocks base method.
func (m *MockUrl_api) Create_Short_URL(arg0 context.Context, arg1 *url_shortener.Link) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create_Short_URL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create_Short_URL indicates an expected call of Create_Short_URL.
func (mr *MockUrl_apiMockRecorder) Create_Short_URL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create_Short_URL", reflect.TypeOf((*MockUrl_api)(nil).Create_Short_URL), arg0, arg1)
}

// Get_Base_URL mocks base method.
func (m *MockUrl_api) Get_Base_URL(arg0 context.Context, arg1 *url_shortener.Link) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get_Base_URL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get_Base_URL indicates an expected call of Get_Base_URL.
func (mr *MockUrl_apiMockRecorder) Get_Base_URL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get_Base_URL", reflect.TypeOf((*MockUrl_api)(nil).Get_Base_URL), arg0, arg1)
}
